
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    // Users can read and update their own user document.
    // User creation is tied to their auth UID.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // TrainingPlans collection
    // Users can create, read, update, and delete their own training plans.
    // The training plan document must contain a userId field matching the authenticated user.
    match /trainingPlans/{planId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // DashboardCache collection
    // Users can create, read, update, and delete their own dashboard cache.
    // The document ID for the cache is expected to be the user's UID.
    // The document must also contain a userId field matching the authenticated user.
    match /dashboardCache/{cacheId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == cacheId && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == cacheId && request.auth.uid == request.resource.data.userId;
    }

    // WeatherCache collection
    // For now, allow any authenticated user to read weather cache data.
    // Writes to this collection should ideally be handled by a trusted backend environment,
    // so client-side writes are disallowed.
    match /weatherCache/{weatherCacheId} {
      allow read: if request.auth != null;
      allow write: if false; // Disallow client-side writes for now
    }
  }
}
