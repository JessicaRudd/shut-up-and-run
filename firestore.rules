
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users:
    // - Authenticated users can create their own user document.
    // - Users can read, update, and delete their own document.
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if request.auth != null && request.resource.data.id == request.auth.uid;
    }

    // TrainingPlans:
    // - Authenticated users can create training plans for themselves.
    // - Users can read, update, and delete their own training plans.
    // - Ensure userId cannot be changed on update.
    match /trainingPlans/{planId} {
      allow read, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid && request.resource.data.userId == resource.data.userId;
    }

    // DashboardCache:
    // - Authenticated users can create their own dashboard cache.
    // - Users can read, update, and delete their own dashboard cache.
    // - Document ID is expected to be the userId.
    match /dashboardCache/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if request.auth != null && request.resource.data.id == request.auth.uid && request.resource.data.userId == request.auth.uid;
    }

    // Feedback:
    // - Allow authenticated and unauthenticated users to create feedback documents.
    match /feedback/{feedbackId} {
      allow create: true;
    }
  }
}
